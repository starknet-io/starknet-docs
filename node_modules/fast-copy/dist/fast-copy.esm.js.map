{"version":3,"file":"fast-copy.esm.js","sources":["../../src/utils.ts","../../src/index.ts"],"sourcesContent":["const { toString: toStringFunction } = Function.prototype;\nconst {\n  create,\n  defineProperty,\n  getOwnPropertyDescriptor,\n  getOwnPropertyNames,\n  getOwnPropertySymbols,\n  getPrototypeOf,\n} = Object;\nconst { hasOwnProperty, propertyIsEnumerable } = Object.prototype;\n\nconst SYMBOL_PROPERTIES = typeof getOwnPropertySymbols === 'function';\nconst WEAK_MAP = typeof WeakMap === 'function';\n\n/**\n * @function createCache\n *\n * @description\n * get a new cache object to prevent circular references\n *\n * @returns the new cache object\n */\nexport const createCache = (() => {\n  if (WEAK_MAP) {\n    return (): FastCopy.Cache => new WeakMap();\n  }\n\n  class Cache {\n    _keys: any[] = [];\n    _values: any[] = [];\n\n    has(key: any) {\n      return !!~this._keys.indexOf(key);\n    }\n\n    get(key: any) {\n      return this._values[this._keys.indexOf(key)];\n    }\n\n    set(key: any, value: any) {\n      this._keys.push(key);\n      this._values.push(value);\n    }\n  }\n\n  return (): FastCopy.Cache => new Cache();\n})();\n\n/**\n * @function getCleanClone\n *\n * @description\n * get an empty version of the object with the same prototype it has\n *\n * @param object the object to build a clean clone from\n * @param realm the realm the object resides in\n * @returns the empty cloned object\n */\nexport const getCleanClone = (object: any, realm: FastCopy.Realm): any => {\n  const prototype = object.__proto__ || getPrototypeOf(object);\n\n  if (!prototype) {\n    return create(null);\n  }\n\n  const Constructor = prototype.constructor;\n\n  if (Constructor === realm.Object) {\n    return prototype === realm.Object.prototype ? {} : create(prototype);\n  }\n\n  if (~toStringFunction.call(Constructor).indexOf('[native code]')) {\n    try {\n      return new Constructor();\n    } catch {}\n  }\n\n  return create(prototype);\n};\n\n/**\n * @function getObjectCloneLoose\n *\n * @description\n * get a copy of the object based on loose rules, meaning all enumerable keys\n * and symbols are copied, but property descriptors are not considered\n *\n * @param object the object to clone\n * @param realm the realm the object resides in\n * @param handleCopy the function that handles copying the object\n * @returns the copied object\n */\nexport const getObjectCloneLoose: FastCopy.ObjectCloner = (\n  object: any,\n  realm: FastCopy.Realm,\n  handleCopy: FastCopy.Copier,\n  cache: FastCopy.Cache,\n): any => {\n  const clone: any = getCleanClone(object, realm);\n\n  // set in the cache immediately to be able to reuse the object recursively\n  cache.set(object, clone);\n\n  for (const key in object) {\n    if (hasOwnProperty.call(object, key)) {\n      clone[key] = handleCopy(object[key], cache);\n    }\n  }\n\n  if (SYMBOL_PROPERTIES) {\n    const symbols: symbol[] = getOwnPropertySymbols(object);\n\n    for (\n      let index = 0, length = symbols.length, symbol;\n      index < length;\n      ++index\n    ) {\n      symbol = symbols[index];\n\n      if (propertyIsEnumerable.call(object, symbol)) {\n        clone[symbol] = handleCopy(object[symbol], cache);\n      }\n    }\n  }\n\n  return clone;\n};\n\n/**\n * @function getObjectCloneStrict\n *\n * @description\n * get a copy of the object based on strict rules, meaning all keys and symbols\n * are copied based on the original property descriptors\n *\n * @param object the object to clone\n * @param realm the realm the object resides in\n * @param handleCopy the function that handles copying the object\n * @returns the copied object\n */\nexport const getObjectCloneStrict: FastCopy.ObjectCloner = (\n  object: any,\n  realm: FastCopy.Realm,\n  handleCopy: FastCopy.Copier,\n  cache: FastCopy.Cache,\n): any => {\n  const clone: any = getCleanClone(object, realm);\n\n  // set in the cache immediately to be able to reuse the object recursively\n  cache.set(object, clone);\n\n  const properties: (string | symbol)[] = SYMBOL_PROPERTIES\n    ? getOwnPropertyNames(object).concat(\n        getOwnPropertySymbols(object) as unknown as string[],\n      )\n    : getOwnPropertyNames(object);\n\n  for (\n    let index = 0, length = properties.length, property, descriptor;\n    index < length;\n    ++index\n  ) {\n    property = properties[index];\n\n    if (property !== 'callee' && property !== 'caller') {\n      descriptor = getOwnPropertyDescriptor(object, property);\n\n      if (descriptor) {\n        // Only clone the value if actually a value, not a getter / setter.\n        if (!descriptor.get && !descriptor.set) {\n          descriptor.value = handleCopy(object[property], cache);\n        }\n\n        try {\n          defineProperty(clone, property, descriptor);\n        } catch (error) {\n          // Tee above can fail on node in edge cases, so fall back to the loose assignment.\n          clone[property] = descriptor.value;\n        }\n      } else {\n        // In extra edge cases where the property descriptor cannot be retrived, fall back to\n        // the loose assignment.\n        clone[property] = handleCopy(object[property], cache);\n      }\n    }\n  }\n\n  return clone;\n};\n\n/**\n * @function getRegExpFlags\n *\n * @description\n * get the flags to apply to the copied regexp\n *\n * @param regExp the regexp to get the flags of\n * @returns the flags for the regexp\n */\nexport const getRegExpFlags = (regExp: RegExp): string => {\n  let flags = '';\n\n  if (regExp.global) {\n    flags += 'g';\n  }\n\n  if (regExp.ignoreCase) {\n    flags += 'i';\n  }\n\n  if (regExp.multiline) {\n    flags += 'm';\n  }\n\n  if (regExp.unicode) {\n    flags += 'u';\n  }\n\n  if (regExp.sticky) {\n    flags += 'y';\n  }\n\n  return flags;\n};\n","// utils\nimport {\n  createCache,\n  getObjectCloneLoose,\n  getObjectCloneStrict,\n  getRegExpFlags,\n} from './utils';\n\nconst { isArray } = Array;\nconst { getPrototypeOf } = Object;\n\nconst GLOBAL_THIS: FastCopy.Realm = (function () {\n  if (typeof globalThis !== 'undefined') {\n    return globalThis;\n  }\n\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n\n  if (console && console.error) {\n    console.error('Unable to locate global object, returning \"this\".');\n  }\n\n  return this;\n})();\n\n/**\n * @function copy\n *\n * @description\n * copy an value deeply as much as possible\n *\n * If `strict` is applied, then all properties (including non-enumerable ones)\n * are copied with their original property descriptors on both objects and arrays.\n *\n * The value is compared to the global constructors in the `realm` provided,\n * and the native constructor is always used to ensure that extensions of native\n * objects (allows in ES2015+) are maintained.\n *\n * @param value the value to copy\n * @param [options] the options for copying with\n * @param [options.isStrict] should the copy be strict\n * @param [options.realm] the realm (this) value the value is copied from\n * @returns the copied value\n */\nfunction copy<Value>(value: Value, options?: FastCopy.Options): Value {\n  // manually coalesced instead of default parameters for performance\n  const isStrict = !!(options && options.isStrict);\n  const realm = (options && options.realm) || GLOBAL_THIS;\n  const getObjectClone = isStrict ? getObjectCloneStrict : getObjectCloneLoose;\n\n  /**\n   * @function handleCopy\n   *\n   * @description\n   * copy the value recursively based on its type\n   *\n   * @param value the value to copy\n   * @returns the copied value\n   */\n  const handleCopy: FastCopy.Copier = (\n    value: any,\n    cache: FastCopy.Cache,\n  ): any => {\n    if (!value || typeof value !== 'object') {\n      return value;\n    }\n\n    if (cache.has(value)) {\n      return cache.get(value);\n    }\n\n    const prototype = value.__proto__ || getPrototypeOf(value);\n    const Constructor = prototype && prototype.constructor;\n\n    // plain objects\n    if (!Constructor || Constructor === realm.Object) {\n      return getObjectClone(value, realm, handleCopy, cache);\n    }\n\n    let clone: any;\n\n    // arrays\n    if (isArray(value)) {\n      // if strict, include non-standard properties\n      if (isStrict) {\n        return getObjectCloneStrict(value, realm, handleCopy, cache);\n      }\n\n      clone = new Constructor();\n      cache.set(value, clone);\n\n      for (\n        let index: number = 0, length = value.length;\n        index < length;\n        ++index\n      ) {\n        clone[index] = handleCopy(value[index], cache);\n      }\n\n      return clone;\n    }\n\n    // dates\n    if (value instanceof realm.Date) {\n      return new Constructor(value.getTime());\n    }\n\n    // regexps\n    if (value instanceof realm.RegExp) {\n      clone = new Constructor(\n        value.source,\n        value.flags || getRegExpFlags(value),\n      );\n\n      clone.lastIndex = value.lastIndex;\n\n      return clone;\n    }\n\n    // maps\n    if (realm.Map && value instanceof realm.Map) {\n      clone = new Constructor();\n      cache.set(value, clone);\n\n      value.forEach((value: any, key: any) => {\n        clone.set(key, handleCopy(value, cache));\n      });\n\n      return clone;\n    }\n\n    // sets\n    if (realm.Set && value instanceof realm.Set) {\n      clone = new Constructor();\n      cache.set(value, clone);\n\n      value.forEach((value: any) => {\n        clone.add(handleCopy(value, cache));\n      });\n\n      return clone;\n    }\n\n    // blobs\n    if (realm.Blob && value instanceof realm.Blob) {\n      return value.slice(0, value.size, value.type);\n    }\n\n    // buffers (node-only)\n    if (realm.Buffer && realm.Buffer.isBuffer(value)) {\n      clone = realm.Buffer.allocUnsafe\n        ? realm.Buffer.allocUnsafe(value.length)\n        : new Constructor(value.length);\n\n      cache.set(value, clone);\n      value.copy(clone);\n\n      return clone;\n    }\n\n    // arraybuffers / dataviews\n    if (realm.ArrayBuffer) {\n      // dataviews\n      if (realm.ArrayBuffer.isView(value)) {\n        clone = new Constructor(value.buffer.slice(0));\n        cache.set(value, clone);\n        return clone;\n      }\n\n      // arraybuffers\n      if (value instanceof realm.ArrayBuffer) {\n        clone = value.slice(0);\n        cache.set(value, clone);\n        return clone;\n      }\n    }\n\n    // if the value cannot / should not be cloned, don't\n    if (\n      // promise-like\n      typeof value.then === 'function' ||\n      // errors\n      value instanceof Error ||\n      // weakmaps\n      (realm.WeakMap && value instanceof realm.WeakMap) ||\n      // weaksets\n      (realm.WeakSet && value instanceof realm.WeakSet)\n    ) {\n      return value;\n    }\n\n    // assume anything left is a custom constructor\n    return getObjectClone(value, realm, handleCopy, cache);\n  };\n\n  return handleCopy(value, createCache());\n}\n\n// Adding reference to allow usage in CommonJS libraries compiled using TSC, which\n// expects there to be a default property on the exported value. See\n// [#37](https://github.com/planttheidea/fast-copy/issues/37) for details.\ncopy.default = copy;\n\n/**\n * @function strictCopy\n *\n * @description\n * copy the value with `strict` option pre-applied\n *\n * @param value the value to copy\n * @param [options] the options for copying with\n * @param [options.realm] the realm (this) value the value is copied from\n * @returns the copied value\n */\ncopy.strict = function strictCopy(value: any, options?: FastCopy.Options) {\n  return copy(value, {\n    isStrict: true,\n    realm: options ? options.realm : void 0,\n  });\n};\n\nexport default copy;\n"],"names":["getPrototypeOf"],"mappings":"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"}